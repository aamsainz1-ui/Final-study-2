#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Database Structure...\n');

const prismaDbPath = path.join(__dirname, 'prisma', 'db', 'custom_new.db');

if (fs.existsSync(prismaDbPath)) {
  try {
    const Database = require('better-sqlite3');
    const db = new Database(prismaDbPath);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users
    const tableInfo = db.prepare("PRAGMA table_info(users)").all();
    
    console.log('üìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:');
    tableInfo.forEach(column => {
      console.log(`  - ${column.name} (${column.type}) ${column.notnull ? 'NOT NULL' : ''} ${column.pk ? 'PRIMARY KEY' : ''}`);
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ username column ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const hasUsername = tableInfo.some(col => col.name === 'username');
    
    if (!hasUsername) {
      console.log('\nüîß ‡πÄ‡∏û‡∏¥‡πà‡∏° username column...');
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° username column
      const addColumn = db.prepare('ALTER TABLE users ADD COLUMN username TEXT');
      addColumn.run();
      
      console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° username column ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } else {
      console.log('\n‚úÖ ‡∏°‡∏µ username column ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ isActive column ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const hasIsActive = tableInfo.some(col => col.name === 'isActive');
    
    if (!hasIsActive) {
      console.log('üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° isActive column...');
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° isActive column
      const addColumn = db.prepare('ALTER TABLE users ADD COLUMN isActive INTEGER DEFAULT 1');
      addColumn.run();
      
      console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° isActive column ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } else {
      console.log('‚úÖ ‡∏°‡∏µ isActive column ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log('\nüìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
    const newTableInfo = db.prepare("PRAGMA table_info(users)").all();
    newTableInfo.forEach(column => {
      console.log(`  - ${column.name} (${column.type}) ${column.notnull ? 'NOT NULL' : ''} ${column.pk ? 'PRIMARY KEY' : ''}`);
    });
    
    db.close();
    
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Database Structure ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    
  } catch (error) {
    console.log('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  }
} else {
  console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
}